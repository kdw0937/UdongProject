/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2021-01-26 23:51:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ranking_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/C:/Users/Uk/Documents/workspace-sts-3.9.7.RELEASE/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/matjib/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/Uk/Documents/workspace-sts-3.9.7.RELEASE/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/matjib/WEB-INF/lib/spring-webmvc-3.2.3.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1369011858000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1608102844801L));
    _jspx_dependants.put("jar:file:/C:/Users/Uk/Documents/workspace-sts-3.9.7.RELEASE/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/matjib/WEB-INF/lib/spring-webmvc-3.2.3.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1369011858000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-3.2.3.RELEASE.jar", Long.valueOf(1608102841424L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h3 class=\"content_title\">\r\n");
      out.write("\t\t\t<!-- form action=\"#\" method=\"GET\"></form> -->\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"main_Search\"\r\n");
      out.write("\t\t\t\tplaceholder=\"Insert your Search Text!\" /> <input type=\"submit\"\r\n");
      out.write("\t\t\t\tvalue=\"Search\" class=\"btn\" />\r\n");
      out.write("\t\t</h3>\r\n");
      out.write("\r\n");
      out.write("\t\t<p class=\"project_link\">\r\n");
      out.write("\t\t\t<a href=\"#\">전체 맛집목록 보기는 여기를 클릭하세요!!</a>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t<ul class=\"ranking_list\">\r\n");
      out.write("           <li>  \r\n");
      out.write("                <a href=\"../ranking/raking_female.html\">\r\n");
      out.write("                <img src=\"../img/Ranking_Lady.jpg\" alt=\"image3\"/>\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"../ranking/raking_male.html\">\r\n");
      out.write("                <img src=\"../img/Ranking_Date.png\" alt=\"image explane\"/>\r\n");
      out.write("                </a>             \r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"../ranking/raking_uncle.html\">\r\n");
      out.write("                <img src=\"../img/Ranking_Uncle.jpg\" alt=\"image2\"/>\r\n");
      out.write("                </a>                \r\n");
      out.write("            </li>\r\n");
      out.write("            <li>  \r\n");
      out.write("                <a href=\"../ranking/ranking_2030.html\">\r\n");
      out.write("                <img src=\"../img/Ranking_2030.jpg\" alt=\"image3\"/>\r\n");
      out.write("                </a>               \r\n");
      out.write("            </li>  \r\n");
      out.write("             <li>  \r\n");
      out.write("                <a href=\"../ranking/review_star.html\">\r\n");
      out.write("                <img src=\"../img/Ranking_solo.png\" alt=\"image3\"/>\r\n");
      out.write("                </a>               \r\n");
      out.write("            </li>  \r\n");
      out.write("              <li>  \r\n");
      out.write("                <a href=\"../ranking/review_ranking.html\">\r\n");
      out.write("                <img src=\"../img/Ranking_Instar.png\" alt=\"image3\"/>\r\n");
      out.write("                </a>               \r\n");
      out.write("            </li>  \r\n");
      out.write("               \r\n");
      out.write("        </ul>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
